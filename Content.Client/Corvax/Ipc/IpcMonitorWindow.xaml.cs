using System;
using System.Collections.Generic;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;

namespace Content.Client.Corvax.Ipc;

[GenerateTypedNameReferences]
public sealed partial class IpcMonitorWindow : DefaultWindow
{
    public event Action<string>? OnSelect;

    public IpcMonitorWindow()
    {
        RobustXamlLoader.Load(this);
    }

    public void UpdateState(List<string> monitors, string current)
    {
        MonitorList.RemoveAllChildren();
        foreach (var id in monitors)
        {
            var text = Loc.GetString($"ipc-monitor-{id}");
            var button = new Button { Text = text };
            button.Disabled = id == current;
            button.OnPressed += _ => OnSelect?.Invoke(id);
            MonitorList.AddChild(button);
        }
    }
}
